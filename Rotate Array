Problem Description
You are given an integer array nums and an integer k.
Your task is to rotate the array to the right by k steps, where k is non-negative.

Approach:
To rotate the array in-place without extra memory, we use a reversal method.

Reverse the entire array.

Example: [1,2,3,4,5,6,7] → [7,6,5,4,3,2,1]
Reverse the first k elements.

Example: [7,6,5,4,3,2,1] → [5,6,7,4,3,2,1] (first 3 elements reversed)
Reverse the remaining elements.

Example: [5,6,7,4,3,2,1] → [5,6,7,1,2,3,4]

def rotate(nums, k):
    n = len(nums)
    k = k % n  # In case k is larger than the array length

    # Step 1: Reverse the entire array
    nums.reverse()

    # Step 2: Reverse the first k elements
    nums[:k] = reversed(nums[:k])

    # Step 3: Reverse the remaining elements
    nums[k:] = reversed(nums[k:])

# Example usage:
nums1 = [1, 2, 3, 4, 5, 6, 7]
rotate(nums1, 3)
print(nums1)  # Output: [5,6,7,1,2,3,4]

nums2 = [-1, -100, 3, 99]
rotate(nums2, 2)
print(nums2)  # Output: [3,99,-1,-100]
